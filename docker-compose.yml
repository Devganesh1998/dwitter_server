version: "3.7"
services:
  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: dwitter
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  cache:
    image: redis
    container_name: cache
    volumes:
      - redis-data:/data
    ports:
      - '6374:6379'
    entrypoint: redis-server --appendonly yes
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always
    ports:
    - 2181:2181
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka-data:/var/lib/kafka/data
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    volumes:
      - es-data:/usr/share/elasticsearch/data
      # - ./elasticsearch-config.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
      - node.name=elastic
    networks:
      - es-net
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elastic
    networks:
      - es-net
    volumes: 
      - kib-data:/usr/share/kibana/data
      # - ./kibana-config.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200
  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - db
      - cache
      - kafka
      - elastic
    ports:
      - "4500:4500"
    environment:
      - DEV_DATABASE_URL=postgres://postgres:postgres@db:5432/dwitter
      - PORT=4500
      - NODE_ENV=development
      - REDIS_HOST=cache
    volumes:
      - .:/app
    command: npm run dev

volumes:
  es-data:
  kib-data:
  pg-data:
  redis-data:
  kafka-data:

networks:
  es-net:
    driver: bridge
